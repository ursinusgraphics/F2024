SECTION
<a name = "primitives">Geometric Primitives</a>
The course will start with an overview of some important mathematical concepts from linear algebra and vector geometry to get everyone on the same page.  These are the basic building blocks that will be used again and again in the rest of the course.  The pace at which we go through this section will adapt to the background knowledge of the students.  We will have two small individual programming assignments in this section to get everyone used to programming with geometry in Javascript.<p><b>Big Concepts And Questions:</b><ul><li>What is numerical geometry?</li><li>How does the quadratic formula help is with ray object intersections?</li><li>What trick can we use to incorporate both linear operations and translations into a single matrix?  Why do we want to do this?</li></ul></p>

LECTURE
Course Overview, Intro To Javascript, Scoping And Infinite Loops in Javascript

<ul><li><a href = "https://docs.google.com/presentation/d/1fObqIZ9QRQ50K0y5s_PKxxUxcn-pyooxjviPbn4oifo/edit?usp=sharing">Slides from today</a></li><li><a href = "../Modules/Week1/PyRaster">Class Exercise: Python Rasterization</a></li></ul>Javascript Resources<ul><li><a href = "http://www.cs.princeton.edu/courses/archive/spring19/cos426/precepts/01-precept.pdf">Princeton Javascript for Graphics Crash Course</a></li><li><a href = "https://developer.mozilla.org/en-US/docs/Web/JavaScript">Mozilla Javascript tutorial</a></li></ul>
LECTURE
Basic Rasterization and Javascript

<ul><li><a href = "ClassExercises/Week1_Drawing">Drawing in Javascript Exercise</a></li></ul>
LECTURE
Begin Vectors: Vector Addition, Dot Products

Math Resources:<ul><li><a href = "Lectures/2_VectorsIntro">Prof. Tralie's notes on vectors</a></li><li><a href = "https://www.youtube.com/watch?v=Jes5jwLl1q8&list=PL8erL0pXF3JYm7VaTdKDaWc8Q3FuP8Sa7">Calculus Blue</a> 4.1 - 4.3, 5.1 - 5.3, 6.1 - 6.3</li><li><a href = "https://demoman.net/?a=trig-for-games">Trig for games</a></li></ul>
LECTURE
Projection, Cross Products, Intersecting Circles

<ul><li><a href = "http://glmatrix.net/docs/">glMatrix library documentation</a></li><li><a href = "hhttps://github.com/ursinusgraphics/Week2_CirclesIntersect/archive/refs/heads/master.zip">Circle Intersecting Exercise</a></li></ul>
LECTURE
Barycentric Coordinates, Triangle Interior Point Testing, Normals

<ul><li><a href = "Materials/BarycentricExploration/WeightedAverage.html">Weighted Average of Triangle Points Applet</a></li><li><a href = "Materials/BarycentricExploration/BarycentricTriangles.html">Barycentric Coordinates via Area Ratios</a></li></ul>
LECTURE
Lines, Rays, And Planes


LECTURE
Ray Intersect Plane & Ray Intersect Sphere

<ul><li><a href = "ClassExercises/Week3_Reflections">Week 3: Ray Reflection Class Exercise</a></li><li><a href = "ClassExercises/Week3_RayIntersections">Week 3: Ray Intersection Class Notes</a></li></ul>
LECTURE
2D Matrix Transformations, Composition of Transformations, Inverses

<ul><li><a href = "../Modules/slides/2DMatrix.pdf">Slides</a></li><li><a href = "Materials/ggslac/viewers/MatrixAnim.html">Prof. Tralie's Matrix Transformation Demo Widget</a></li></ul>
LECTURE
Matrix Translations And Homogeneous Coordinates, Combined Rotations/Translations, Begin 3D Matrix Transformations

<ul><li><a href = "https://ncase.me/matrix/">2D Homogeneous Coordinates Reactive Demo</a></li><li><a href = "https://twitter.com/keenanisalive/status/1305074064575340544">Keenan Crane's animation of lifting and cone shearing</li><li><a href = "../Modules/slides/3DMatrix.pdf">3D Transformations Slides</a></li></ul>
SECTION
<a name = "animation">3D Animation</a>
In this section, we will cover some of the basics of 3D animation at a surface level.  This is an incredibly broad field, so we will focus primarily on the math underlying a subset of professional animation tools such as <a href = "https://www.blender.org/">Blender</a> and <a href = "https://www.autodesk.com/products/maya/overview">Maya</a>, rather than the tools themselves.  <p><b>Big Concepts And Questions:</b><ul><li>What are local coordinates, and what are world coordinates?</li><li>What are we modeling in a "scene" of 3D geometry?</li><li>Explain why "inverse kinematics" are named as such</li></li><li>How does skinning work, and what are its shortcomings?</li><li>What is Gimbal Lock, and what animation scenarios does it adversely impact and how?</li></ul></p>

LECTURE
JSON, Hierarchical Transformations, Scene Graphs

<ul><li><a href = "https://ursinus-cs476-f2020.github.io/Modules/assets/js/ggslac/viewers/SceneViewer.html">Scene Viewer</a></li><li><a href = "https://ursinus-cs476-f2020.github.io/Modules/assets/js/ggslac/viewers/SceneEditor.html">Scene Editor</a></li><li><a href = "http://www.json.org/">http://www.json.org/</a></li><li><a href = "Lectures/Module7/TableWithCone.json">TableWithCone.json</a></li></ul>
LECTURE
Scene Graphs Continued

<ul><li><a href = "ClassExercises/Week4_Scenes/kevinstable.html">Kevin's rotated table</a></li></ul>
LECTURE
The Animation Loop, Basic Physics


LECTURE
Basic Collision Detection And Response, Convex Hulls/The Separating Axis Theorem


LECTURE
MOCAP, Forward And Backward Reaching Inverse Kinematics (FABRIK)

<ul><li><a href = "Assignments/HW3_CharacterAnimation/HW3_CharacterAnimation/forward.html">Forward Kinematics Demo</a></li><li><a href = "http://www.andreasaristidou.com/FABRIK.html">FABRIK Paper</a></li><li><a href = "Materials/JavaScript_MOCAP_Animation">Javascript MOCAP Visualizer</a></li><li><a href = "http://mocap.cs.cmu.edu/">CMU MOCAP Database</li></ul><ul><li><a href = "https://twitter.com/TheRujiK/status/969581641680195585">Wonky salamander</a></li><li><a href = "https://twitter.com/i/status/1135929820603228161">Tentacle + cake...</a></li><li><a href = "https://www.shadertoy.com/view/XldSDn">Shadertoy dancing tentacle</a></li></ul>
LECTURE
Rigging/Skinning


LECTURE
Euler Angles, Gimbal Lock

<ul><li><a href = "https://www.youtube.com/watch?v=zc8b2Jo7mno">Excellent youtube video on gimbal lock</a></li><li><a href = "https://www.youtube.com/watch?v=cJ9qdGAE8L8">Houston, we have a problem</a></li></ul>
LECTURE
Rodrigues' Rotation Formula, Begin Quaternions

<ul><li><a href = "https://github.com/ursinus-cs476-f2022/Week6_AxisAngle/archive/refs/heads/main.zip">Class Programming Exercise on Axis-Angle Rotation</li></ul>
LECTURE
Quaternions/SLERP 

<ul><li><a href = "Materials/SlerpViz">Quaternion SLERP Visualization App</a></li><li><a href = "http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToEuler/">Quaternions to euler angles and back: geometric explanations</a></li><li><a href = "https://en.wikipedia.org/wiki/Quaternions_and_spatial_rotation#Rotation_identity">Wikipedia Derivation of Quaternion Axis/Angle Identity</a></li><li><a href = "https://allenchou.net/2018/05/game-math-deriving-the-slerp-formula/">SLERP Derivation</a></li></ul>
SECTION
<a name = "shape">3D Shape Representations</a>
Now that we know how to represent fundamental geometry numerically, we will discuss data structures for representing more complicated custom shapes, which form the backbone of modern CAD and 3D modeling applications.  The first of these is the triangle mesh, which is a discrete approximation of a smooth 2D manifold surface consisting of a collection of triangles connected to each other at a common edge.  We will then discuss continuous representations, including subdivision surfaces.  We will conclude this unit with implicit surfaces, which are volumetric descriptions of surfaces which allow for easy boolean operations and natural design of neat shapes such as water drops.  And as we will see, implicit surfaces lead to a very particular, smooth aesthetic via "metaballs" (not "m<b>ea</b>tballs"!).<p><b>Big Concepts And Questions:</b><ul><li>What is the difference between a discrete and continuous data structure for surfaces?</li><li>What are geometric properties of a triangle mesh, and what are topological properties of a triangle mesh?</li><li>What are the strengths and limitations of different shape representations?</li><li>How many metaballs does one need to design a human head?</li></ul></p>

LECTURE
Triangle Meshes, Triangle Mesh Topology: Manifold, Boundary, Euler Characteristic

<ul><li><a href = "https://ursinus.instructure.com/courses/14942/files?preview=1712663">Shirley / Manscher</a> 12.1.1 - 12.1.3</li><li><a href = "http://jdh.hamkins.org/math-for-eight-year-olds/">Graph theory for 8-year olds</a></li></ul>
LECTURE
HW3 Work Session, Connected Sums


LECTURE
Mesh Orientation, Mesh Storage Requirements, Basic Mesh Data Structures

<ul><li><a href = "https://ursinus.instructure.com/courses/14942/files?preview=1712663">Shirley / Manscher</a> 12.1.2 - 12.1.3</li><li><a href = "https://www.cc.gatech.edu/~jarek/courses/handouts/meshes.pdf">Additional Reading on Mesh Data Structures</a></li></ul>
LECTURE
The Half Edge Data Structure 

<ul><li><a href = "http://kaba.hilvi.org/homepage/blog/halfedge/halfedge.htm">Kalle Rutanen's Half Edge Tutorial</a></li></ul>
LECTURE
Half-Edge Boundaries, Per-Vertex Normals

<ul><li><a href = "http://www.bytehazard.com/articles/vertnorm.html">Per-vertex normals notes</a></li></ul>
LECTURE
Algorithm To Consistently Orient Meshes, Begin Subdivision Surfaces

<ul><li><a href = "ClassExercises/Week9_MeshOrientation/orientability.zip">Orient class exercise code</a></li><li><a href = "../CurveSubdivision">CurveSubdivision class exercise</a></li><li><a href = "https://ursinus-cs477-f2021.github.io/CoursePage/Materials/MazeExplorer/">CS 477 Graph Search Algorithms</a></li><li><a href = "https://graphics.stanford.edu/~mdfisher/subdivision.html">Matt Fisher quick subdivision notes</a></li><li><a href = "https://mrl.nyu.edu/publications/subdiv-course2000/coursenotes00.pdf">SIGGRAPH 2000 Subdivision Surface Notes</a> (Long)</li><li><a href = "https://threejs.org/examples/webgl_modifier_subdivision.html">three.js subdivision demo</a></li></ul>
LECTURE
Finish Subdivision Surfaces, Edge Collapse


LECTURE
Mesh Simplification


LECTURE
Implicit Surfaces/ Marching Cubes

<ul><li><a href = "../Modules/assets/js/ggslac/viewers/HeightmapEditor.html">Heightmap Editor</a></li><li><a href = "ClassExercises/ImplicitSurfaces">Volumetric levelset editor</a></li><li><a href = "https://www.willusher.io/webgl-marching-cubes/#Skull">Will Usher real-time marching cubes</a></li><li><a href = "http://jamie-wong.com/2014/08/19/metaballs-and-marching-squares/">Jamie Wong Marching Squares Live Demo</a></li><li><a href = "http://paulbourke.net/geometry/polygonise/">Paul Bourke Polygonize Notes</a></li><li><a href = "https://youtu.be/941z56i7QJE?t=71">Implicit human minus cylinder</a></li></ul>
SECTION
<a name = "rendering">3D Rendering</a>
In this part of the course, we discuss how to use a computer to generate images of 3D geometric scenes, a process known as "3D rendering."  The ultimate goal of such techniques is to make photorealistic images that look like what a camera might take in the real world, though, as we will see, this is quite challenging.  In the process of attempting to meet this goal, we will think about how light bounces around in the real world and how humans see that light, and we will discuss algorithms that attempt to mimic this.  To this end, students will start off implementing a <a href = "https://en.wikipedia.org/wiki/Ray_tracing_(graphics)">ray tracer</a>, which is a non-realtime rendering technique, but which allows for visually stunning effects with reflection, refraction, and shadows.  We will then talk about the more traditional rendering pipeline, which leads to visually inferior but interactive images.  Students will learn the basics of the <a href = "https://en.wikipedia.org/wiki/WebGL">WebGL</a> / <a href = "https://en.wikipedia.org/wiki/OpenGL_Shading_Language">GLSL</a> Javascript API, which implements this rendering pipeline.<p><b>Big Concepts And Questions:</b><ul><li>What is object-first rendering, and what is pixel first rendering?  What are the pros and cons of each?</li><li>What kinds of visual effects emerge as light bounces around?</li><li>What can be accomplished with ray tracing that's difficult to accomplish with real time rendering pipelines?</li><li>What kinds of approximations make WebGL rendering fast?</li><li>What technical aspects of virtual reality make it more computationally expensive?</li></ul></p>

LECTURE
Shaders And GLSL: Attributes, Varying, Uniforms

<ul><li><a href = "ClassExercises/Week10_Shaders/slides.pdf">Overview Slides</li><li><a href = "https://en.wikibooks.org/wiki/GLSL_Programming">GLSL Programming WikiBook</a></li><li><a href = "https://www.shadertoy.com/">shadertoy.com</a></li></ul>
LECTURE
Animations with Shaders, Textures

<ul><li><a href = "https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Tutorial/Using_textures_in_WebGL">Mozilla developer notes on WebGL Texture Mapping</li><li><a href = "https://webglfundamentals.org/webgl/lessons/webgl-3d-textures.html">WebGL Fundamentals Notes on Texture Maps And Mipmapping</a></li></ul>
LECTURE
Image Processing with Shaders

<ul><li><a href = "ClassExercises/Week11_EmbossMedian">Embossing And Median Filtering Class Exercise</a></li></ul>
LECTURE
Complex Numbers And Shaders: Julia Sets And Mandelbrot Sets

<ul><li><a href = "ClassExercises/Week11_JuliaSets">Julia Sets Class Exercise</a></li><li><a href = "https://en.wikipedia.org/wiki/L-system">Wikipedia Page on L-Systems</li><li><a href = "https://www.cs.uic.edu/~jbell/CourseNotes/ComputerGraphics/SpecialTopics.html">John Bell's Notes on fractals in computer graphics</li></ul>
LECTURE
Intro To Ray Tracing: 3D Perspectives, Ray Casting, Sphere Normals


LECTURE
rayIntersectScene, Ray Instancing, Normal Matrices


LECTURE
Gouraud Shading, Local Illumination: Lambertian/Phong Illumination

<ul><li><a href = "http://www.cs.toronto.edu/~jacobson/phong-demo/">Alec Jacobson's WebGL Illumination/Shading Demo</a></li><li><a href = "https://ursinus-cs476-f2022.github.io/Modules/Lighting/Lambertian">Shading Class Exercises</a></li></ul>
LECTURE
Phong Shading, Global Illumination: Multiple Lights, Shadows

<ul><li><a href = "https://slate.com/culture/2014/06/the-acoustics-of-eavesdropping-how-curved-ceilings-and-walls-redirect-and-amplify-sound.html">The acoustics of eavesdropping</a></li><li><a href = "https://www.youtube.com/watch?v=8hZl3arO7SY">Carl Sagan's explanation of how the Ancient Greeks knew the earth was round (PBS)</a></li></ul>
LECTURE
Global Illumination: Specular Reflections, Refraction/Transmission


LECTURE
Monte Carlo Path Tracing

<ul><li><a href = "https://www.youtube.com/watch?v=gsZiJeaMO48">Josh Maros ray tracing video</a></li></ul>
LECTURE
Virtual Reality, Augmented Reality


LECTURE
Object-first rendering: The Camera Matrix, Perspective/Viewing matrices, Depth Sorting

<ul><li><a href = "https://www.khronos.org/registry/OpenGL-Refpages/gl2.1/xhtml/gluLookAt.xml">gluLookAt</a> documentation</li></ul>
LECTURE
Cel Shading / Toon Shading, Hidden Surface Removal/Culling

<ul><li><a href = "ClassExercises/Week9_CelShading/CelShading.zip">Cel shading code from class</a></li><li><a href = "https://en.wikipedia.org/wiki/Cel_shading">Wikipedia Page on Cel Shading</a></li><li><a href = "https://www.cs.rpi.edu/~cutler/classes/advancedgraphics/S17/final_projects/amy_toshi.pdf">RPI Final Project on Ray Tracing Cel Shading</a></li></ul>
LECTURE
Object-First Rendering: Bump Maps, Displacement Maps, Shadow Maps

<ul><li><a href = "https://docs.google.com/presentation/d/1nN94a5gkN7BladB9E5SAcvvQCajF8xSdC_-sytOyh7E/edit?usp=sharing">Slides from today</a></li><li><a href = "https://commons.erau.edu/cgi/viewcontent.cgi?article=1206&context=jdfsl">A 3D Stability Analysis of Lee Harvey Oswald in the Backyard Photo</a></li></ul>
LECTURE
Bonus Topic: Dynamic 3D Gaussians


